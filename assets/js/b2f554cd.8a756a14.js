"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[1477],{10:function(e){e.exports=JSON.parse('{"blogPosts":[{"id":"javascript-in-jsx-with-curly-braces","metadata":{"permalink":"/blog/javascript-in-jsx-with-curly-braces","editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2022-07-13-javascript-in-jsx-with-curly-braces/index.md","source":"@site/blog/2022-07-13-javascript-in-jsx-with-curly-braces/index.md","title":"JavaScript in JSX with Curly Braces","description":"This is my personal notes on React Docs(Beta) - JavaScript in JSX with Curly Braces.","date":"2022-07-13T00:00:00.000Z","formattedDate":"July 13, 2022","tags":[{"label":"React","permalink":"/blog/tags/react"},{"label":"React Docs(Beta) Personal Notes","permalink":"/blog/tags/react-docs-beta-personal-notes"}],"readingTime":1.26,"truncated":false,"authors":[{"name":"Ziwei Wang","title":"this website owner","url":"https://github.com/zwwang98","image_url":"https://github.com/zwwang98.png","imageURL":"https://github.com/zwwang98.png"}],"frontMatter":{"slug":"javascript-in-jsx-with-curly-braces","title":"JavaScript in JSX with Curly Braces","authors":{"name":"Ziwei Wang","title":"this website owner","url":"https://github.com/zwwang98","image_url":"https://github.com/zwwang98.png","imageURL":"https://github.com/zwwang98.png"},"tags":["React","React Docs(Beta) Personal Notes"]},"nextItem":{"title":"Personal Notes on React Docs(Beta)","permalink":"/blog/passing-props-to-a-component"}},"content":"This is my personal notes on React Docs(Beta) - [JavaScript in JSX with Curly Braces](https://beta.reactjs.org/learn/javascript-in-jsx-with-curly-braces).\\n\\n## What are the curly braces used for in JSX?\\nAdd some JavaScript inside the markup in the JSX.\\n\\n## Where to use curly braces?\\n1. inside JSX markup\'s tag\\n2. as attributes immediately following the `=` sign inside the JSX markup\'s tag\\n\\n## Sometimes we see \\"double curly braces\\", what does it mean?\\nBesides string, number and other JavaScript expressions, we could also pass JavaScript objects in JSX.\\nObjects in JavaScript are also wrapped in curly braces, therefore, to pass a JavaScript objects in JSX, we need two nested pairs of curly braces.\\nWe could often see this happening in React component\'s inline style:\\n```\\nexport default function TodoList() {\\n  return (\\n    <ul style={{\\n      backgroundColor: \'black\',\\n      color: \'pink\'\\n    }}>\\n      <li>Improve the videophone</li>\\n      <li>Prepare aeronautics lectures</li>\\n      <li>Work on the alcohol-fuelled engine</li>\\n    </ul>\\n  );\\n}\\n```\\nTo make JavaScript object more clear, the code above could also be written like:\\n```\\nexport default function TodoList() {\\n  return (\\n    <ul style={\\n      {\\n        backgroundColor: \'black\',\\n        color: \'pink\'\\n      }\\n    }>\\n      <li>Improve the videophone</li>\\n      <li>Prepare aeronautics lectures</li>\\n      <li>Work on the alcohol-fuelled engine</li>\\n    </ul>\\n  );\\n}\\n```\\n\\n## Recap\\n- Curly braces let you bring JavaScript logic and variables into JSX\'s markup.\\n- Curly braces could appear \\n  - inside the JSX tag content or \\n  - immediately after = in attributes.\\n- `{{` and `}}` is not special syntax: it\u2019s a JavaScript object(inner pair curly braces) tucked inside JSX curly braces(outer pair curly braces)."},{"id":"passing-props-to-a-component","metadata":{"permalink":"/blog/passing-props-to-a-component","editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2022-07-13-passing-props-to-a-component/index.md","source":"@site/blog/2022-07-13-passing-props-to-a-component/index.md","title":"Personal Notes on React Docs(Beta)","description":"This is my personal notes on React Docs(Beta) - Passing Props to a Component.","date":"2022-07-13T00:00:00.000Z","formattedDate":"July 13, 2022","tags":[{"label":"React","permalink":"/blog/tags/react"},{"label":"React Docs(Beta) Personal Notes","permalink":"/blog/tags/react-docs-beta-personal-notes"}],"readingTime":0.115,"truncated":false,"authors":[{"name":"Ziwei Wang","title":"this website owner","url":"https://github.com/zwwang98","image_url":"https://github.com/zwwang98.png","imageURL":"https://github.com/zwwang98.png"}],"frontMatter":{"slug":"passing-props-to-a-component","title":"Personal Notes on React Docs(Beta)","authors":{"name":"Ziwei Wang","title":"this website owner","url":"https://github.com/zwwang98","image_url":"https://github.com/zwwang98.png","imageURL":"https://github.com/zwwang98.png"},"tags":["React","React Docs(Beta) Personal Notes"]},"prevItem":{"title":"JavaScript in JSX with Curly Braces","permalink":"/blog/javascript-in-jsx-with-curly-braces"},"nextItem":{"title":"Personal Notes on React Docs(Beta)","permalink":"/blog/react-docs-beta-notes"}},"content":"This is my personal notes on React Docs(Beta) - [Passing Props to a Component](https://beta.reactjs.org/learn/passing-props-to-a-component).\\n\\n## Why we need passing props for React components?"},{"id":"react-docs-beta-notes","metadata":{"permalink":"/blog/react-docs-beta-notes","editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2022-07-12-react-docs-beta-notes/index.md","source":"@site/blog/2022-07-12-react-docs-beta-notes/index.md","title":"Personal Notes on React Docs(Beta)","description":"- Describing the UI","date":"2022-07-12T00:00:00.000Z","formattedDate":"July 12, 2022","tags":[{"label":"React","permalink":"/blog/tags/react"},{"label":"React Docs(Beta) Personal Notes","permalink":"/blog/tags/react-docs-beta-personal-notes"}],"readingTime":0.08,"truncated":false,"authors":[{"name":"Ziwei Wang","title":"this website owner","url":"https://github.com/zwwang98","image_url":"https://github.com/zwwang98.png","imageURL":"https://github.com/zwwang98.png"}],"frontMatter":{"slug":"react-docs-beta-notes","title":"Personal Notes on React Docs(Beta)","authors":{"name":"Ziwei Wang","title":"this website owner","url":"https://github.com/zwwang98","image_url":"https://github.com/zwwang98.png","imageURL":"https://github.com/zwwang98.png"},"tags":["React","React Docs(Beta) Personal Notes"]},"prevItem":{"title":"Personal Notes on React Docs(Beta)","permalink":"/blog/passing-props-to-a-component"},"nextItem":{"title":"Writting Markup with JSX","permalink":"/blog/jsx"}},"content":"- Describing the UI\\n  - [Writting Markup with JSX](https://zwwang98.github.io/blog/jsx)\\n  - [JavaScript in JSX with Curly Braces](https://zwwang98.github.io/blog/javascript-in-jsx-with-curly-braces)"},{"id":"jsx","metadata":{"permalink":"/blog/jsx","editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2022-07-11-JSX/index.md","source":"@site/blog/2022-07-11-JSX/index.md","title":"Writting Markup with JSX","description":"This is my personal notes on React Docs(Beta) - Writting Markup with JSX.","date":"2022-07-11T00:00:00.000Z","formattedDate":"July 11, 2022","tags":[{"label":"React","permalink":"/blog/tags/react"},{"label":"React Docs(Beta) Personal Notes","permalink":"/blog/tags/react-docs-beta-personal-notes"}],"readingTime":2.375,"truncated":false,"authors":[{"name":"Ziwei Wang","title":"this website owner","url":"https://github.com/zwwang98","image_url":"https://github.com/zwwang98.png","imageURL":"https://github.com/zwwang98.png"}],"frontMatter":{"slug":"jsx","title":"Writting Markup with JSX","authors":{"name":"Ziwei Wang","title":"this website owner","url":"https://github.com/zwwang98","image_url":"https://github.com/zwwang98.png","imageURL":"https://github.com/zwwang98.png"},"tags":["React","React Docs(Beta) Personal Notes"]},"prevItem":{"title":"Personal Notes on React Docs(Beta)","permalink":"/blog/react-docs-beta-notes"},"nextItem":{"title":"What is Servlet?","permalink":"/blog/servlet"}},"content":"This is my personal notes on React Docs(Beta) - [Writting Markup with JSX](https://beta.reactjs.org/learn/writing-markup-with-jsx).\\n\\n## What is JSX?\\nJSX is a syntax extension for JavaScript that lets you write HTML-like markup inside a JavaScript file.\\n\\n## Why do we need JSX?\\n- The Web has been built on HTML(for content), CSS(for style or design) and JavaScript(for logic) and built on separate `.html`, `.css` and `.js` files. \\n  However, all of them serve for the same purpose -- build something users see. \\n  It makes more sense to put related things together. That is why JSX came out.\\n- In React, rendering logic and markup live together in the same place - component. \\n  Based on my understanding, React chose to put HTML into JavaScript - that is what JSX looks like to me.\\n  As the [docs](https://beta.reactjs.org/learn/writing-markup-with-jsx) says:\\n  > Each React component is a JavaScript function that may contain some markup that React renders into the browser.\\n    React components use a syntax extension called JSX to represent that markup.\\n    JSX looks a lot like HTML, but it is a bit stricter and can display dynamic information.\\n    The best way to understand this is to convert some HTML markup to JSX markup.\\n\\n## Rules of JSX\\n1. Return a single root element\\n  - In a React function component, markup is returned at the end of the function.\\n  - We need to wrap all markup tags in one single parent tag. Usually the single parent tag will be `<div></div>` or `<></>`(called React Fragment).\\n  - This is because JSX looks like HTML in JavaScript, but under the hood it is transformed into plain JavaScript. \\n    So in function component we are basically return something in a JavaScript function.\\n    JavaScript function doesn\'t allow multiple values unless you wrap them into an array or an object and return the array or the object.\\n2. Close all the tags\\n  > JSX requires tags to be explicitly closed: self-closing tags like `<img>` must become `<img />`, and wrapping tags like `<li>`oranges must be written as `<li>oranges</li>`.\\n3. camelCase most of the things\\n  - JSX turns into JavaScript and attributes written in JSX become keys of JavaScript objects. In your own components, you will often want to read those attributes into variables.\\n  - But JavaScript has some limitations on variable names. For example, no dashes or reserved words allowed.\\n\\n## Convert HTML to JSX markup\\nHTML and markup in React have different rules. Converting lots of things manually could be tedious.\\nSome [online converter](https://transform.tools/html-to-jsx) could be helpful especially when you have lots of HTML to be converted into React JSX.\\n\\n## Recap\\n- React components group rendering logic together with markup because they are related.\\n- JSX is similar to HTML, with a few differences. You can use a converter if you need to.\\n- Error messages will often point you in the right direction to fixing your markup."},{"id":"servlet","metadata":{"permalink":"/blog/servlet","editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2022-07-08-servlet/index.md","source":"@site/blog/2022-07-08-servlet/index.md","title":"What is Servlet?","description":"About Servlet","date":"2022-07-08T00:00:00.000Z","formattedDate":"July 8, 2022","tags":[{"label":"Java","permalink":"/blog/tags/java"},{"label":"Servelet","permalink":"/blog/tags/servelet"}],"readingTime":3.12,"truncated":false,"authors":[{"name":"Ziwei Wang","title":"this website owner","url":"https://github.com/zwwang98","image_url":"https://github.com/zwwang98.png","imageURL":"https://github.com/zwwang98.png"}],"frontMatter":{"slug":"servlet","title":"What is Servlet?","authors":{"name":"Ziwei Wang","title":"this website owner","url":"https://github.com/zwwang98","image_url":"https://github.com/zwwang98.png","imageURL":"https://github.com/zwwang98.png"},"tags":["Java","Servelet"]},"prevItem":{"title":"Writting Markup with JSX","permalink":"/blog/jsx"},"nextItem":{"title":"Apache Tomcat","permalink":"/blog/tomcat"}},"content":"## About Servlet  \\nSo what is Servelet? Google Search results say:\\n> A servlet is a small Java program that runs within a Web server.\\n\\nI found it helpful to understand the word from an Etymology aspect.\\n1. On [Wikitionary](https://en.wiktionary.org/wiki/servlet), it says that servlet is just a \\"Blend of server + applet\\".\\n2. You may have questions about what does \\"applet\\" mean if you are also a non-native English speaker or haven\'t seen this word before. On [Wikitionary](https://en.wiktionary.org/wiki/applet#English), it says that applet is just \\"app + -let\\". \\"-let\\" is a\\" diminutive suffix that attached to nouns\\"(from [this](https://www.dictionary.com/browse/-let#:~:text=%2Dlet,noun%20(anklet%3B%20wristlet))).\\n\\nEtymology knowledge above just helps me better understand these fancy words. Now based on my understanding:\\n1. \\"-let\\" is a suffix in English. Attaching \\"-let\\" after some nouns could make a word whose meaning is just a small part or piece of the object that noun refers\\n2. \\"applet\\" is just a small part of an app\\n3. \\"servelet\\" is a small part of an app that has something to do with the server\\n\\nNow let\'s check the description from those official documents. It just makes more sense to me after all these seemly boring Etymology analysis:\\n  * applet (from [wikitionary](https://en.wiktionary.org/wiki/applet#English))\\n   ![applet meaning on wikitionary](./applet-wikitionary.png)\\n  * servlet (from [wikitionary](https://en.wiktionary.org/wiki/servlet))\\n   ![servlet meaning on wikitionary](servlet-wikitionary.png)\\n\\nWe could also check detailed definition and explanation at [JavaEE 6 Docs](https://docs.oracle.com/javaee/6/api/javax/servlet/Servlet.html#:~:text=A%20servlet%20is%20a%20small,servlet.):\\n\\n> `public interface Servlet`  \\n> Defines methods that all servlets must implement. A servlet is a small Java program that runs within a Web server. Servlets receive and respond to requests from Web clients, usually across HTTP, the HyperText Transfer Protocol. To implement this interface, you can write a generic servlet that extends javax.servlet.\\n\\nSo based on the official docs, `Servlet` is just a Java interface. \\n\\nTo sum up, we could write Java code to implement Servelet and put those code into Apache Tomcat and then we could run these code. We will see how to do that soon.\\n\\n\\n## Servlet Quick Start\\n1. Create a new Java EE project in Intellij IDEA\\n2. Import `Servlet` dependency in `pom.xml`\\n3. Create a new class that implements `Servlet` interface. Override all methods needed(`init()`, `service()` etc.)\\n4. Configure path using annotation `@WebServlet(\\"/demo1\\")`\\n5. Run the project with Apache Tomcat and visite the `Servlet`\\n\\n\\n## `Servlet` as an Interface\\nAs we discussed above, `Servlet` is a Java interface. It difines 5 methods that all classes implementing `Servlet` must override these methods:\\n![servlet method summary](./servlet-method-summary.png)\\n\\nMore details on [Java EE 6](https://docs.oracle.com/javaee/6/api/javax/servlet/Servlet.html).\\n\\nWe should pay more attention on `service()` method, since this method handles requests  and generates responses.\\n\\n\\n## `HttpServlet`\\nAs the name indicates, `HttpServlet` is just a special type of `Servlet`. `HttpServlet` is an abstract Java class implementing `Servlet` interface.\\n\\nAs we could see on Java EE docs:\\n- `public abstract class HttpServlet extends GenericServlet` \\n  (from [this](https://docs.oracle.com/javaee/7/api/javax/servlet/http/HttpServlet.html))\\n- `public abstract class GenericServlet extends Object implements Servlet, ServletConfig, Serializable`\\n  (from [this](https://docs.oracle.com/javaee/7/api/javax/servlet/GenericServlet.html))\\n\\n`HttpServlet` is important because today we usually build server for browser and browser communicate with server on HTTP protocol.\\n\\nHow does `HttpServlet` work? I think [Java EE docs](https://docs.oracle.com/javaee/7/api/javax/servlet/http/HttpServlet.html) could give us some hints:\\n> There\'s almost no reason to override the service method. service handles standard HTTP requests by dispatching them to the handler methods for each HTTP request type (the doXXX methods listed above).\\nWe could even implement our own `HttpServlet`:\\n1. Cast the incoming request from `ServletRequest` type into `HttpServletRequest` type\\n2. Check HTTP method name\\n3. Based on HTTP method name of the request, dispatch it to corresponding handler method\\nThe handler methods we metioned above, is just the `doXXX` method in [Java EE HttpServlet](https://docs.oracle.com/javaee/7/api/javax/servlet/http/HttpServlet.html)\\n\\n\\n## Configure `urlPattern` of `Servlet`\\nTo be able to handle request, a `Servlet` need to have its own URLs.\\n\\nWe could configure a `Servlet`\'s URL by annotation `@WebServlet`."},{"id":"tomcat","metadata":{"permalink":"/blog/tomcat","editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2022-07-03-tomcat/index.md","source":"@site/blog/2022-07-03-tomcat/index.md","title":"Apache Tomcat","description":"About Apache Tomcat","date":"2022-07-03T00:00:00.000Z","formattedDate":"July 3, 2022","tags":[{"label":"Apache Tomcat","permalink":"/blog/tags/apache-tomcat"},{"label":"Apache","permalink":"/blog/tags/apache"},{"label":"Java","permalink":"/blog/tags/java"},{"label":"Servelet","permalink":"/blog/tags/servelet"}],"readingTime":3.645,"truncated":false,"authors":[{"name":"Ziwei Wang","title":"this website owner","url":"https://github.com/zwwang98","image_url":"https://github.com/zwwang98.png","imageURL":"https://github.com/zwwang98.png"}],"frontMatter":{"slug":"tomcat","title":"Apache Tomcat","authors":{"name":"Ziwei Wang","title":"this website owner","url":"https://github.com/zwwang98","image_url":"https://github.com/zwwang98.png","imageURL":"https://github.com/zwwang98.png"},"tags":["Apache Tomcat","Apache","Java","Servelet"]},"prevItem":{"title":"What is Servlet?","permalink":"/blog/servlet"},"nextItem":{"title":"Useful Shortcuts on Intellij Idea","permalink":"/blog/intellij-idea-useful-shortcuts"}},"content":"## About Apache Tomcat\\nSo what is Tomcat? Roughly speaking, it is a Java Servelet container.\\n\\nSo what is Servelet? I found it helpful to understand the word from an Etymology aspect.\\n1. On [Wikitionary](https://en.wiktionary.org/wiki/servlet), it says that servlet is just a \\"Blend of server + applet\\".\\n2. You may have questions about what does \\"applet\\" mean if you are also a non-native English speaker or haven\'t seen this word before. On [Wikitionary](https://en.wiktionary.org/wiki/applet#English), it says that applet is just \\"app + -let\\". \\"-let\\" is a\\" diminutive suffix that attached to nouns\\"(from [this](https://www.dictionary.com/browse/-let#:~:text=%2Dlet,noun%20(anklet%3B%20wristlet))).\\n\\nEtymology knowledge above just helps me better understand these fancy words. Now based on my understanding:\\n1. \\"-let\\" is a suffix in English. Attaching \\"-let\\" after some nouns could make a word whose meaning is just a small part or piece of the object that noun refers\\n2. \\"applet\\" is just a small part of an app\\n3. \\"servelet\\" is a small part of an app that has something to do with the server\\n\\nNow let\'s check the description from those official documents. It just makes more sense to me after all these seemly boring Etymology analysis:\\n  * applet (from [wikitionary](https://en.wiktionary.org/wiki/applet#English))\\n   ![applet meaning on wikitionary](./applet-wikitionary.png)\\n  * servlet (from [wikitionary](https://en.wiktionary.org/wiki/servlet))\\n   ![servlet meaning on wikitionary](servlet-wikitionary.png)\\n\\nWe could also check detailed definition and explanation at [JavaEE 6 Docs](https://docs.oracle.com/javaee/6/api/javax/servlet/Servlet.html#:~:text=A%20servlet%20is%20a%20small,servlet.):\\n\\n> `public interface Servlet`  \\n> Defines methods that all servlets must implement. A servlet is a small Java program that runs within a Web server. Servlets receive and respond to requests from Web clients, usually across HTTP, the HyperText Transfer Protocol. To implement this interface, you can write a generic servlet that extends javax.servlet.\\n\\n\\nSo based on the official docs, `Servlet` is just a Java interface. \\n\\nTo sum up, we could write Java code to implement Servelet and put those code into Apache Tomcat and then we could run these code. We will see how to do that soon.\\n\\n\\n\\n## Apache Tomcat Quick Start\\nMy device:\\n- macOS Monterey 12.0.1\\n- Macbook Pro M1 2020\\n\\n### How to Install Tomcat Locally\\n1. Install Apache Tomcat on its (official website)[https://tomcat.apache.org/]. I chose to download Tomcat Version 8 in zip.\\n2. Unzip it wherever you want.\\n\\n### Tomcat Directory Structure\\nTo better understand Tomcat, let\'s check its directory structure. I found something userful from Tomcat [docs](https://tomcat.apache.org/tomcat-3.3-doc/tomcat-ug.html#directory_structure):\\n![tomcat directory structure](./tomcat-directory-structure.png)\\n\\nWe should pay more attention to those folders: `bin`, `conf`, `webapps`.\\n- `bin`: excutable files\\n- `conf`: configurations\\n- `webapps`: web applications\\n\\n### How to Start a Tomcat Server\\n3. In terminal, find the `start.sh` file under `bin` folder. If you are in windows OS, you should run `start.bat` instead.\\n4. Before run it, give permissions to all files ending with `.sh` by running the command below in terminal:  \\n   `chmod +x *.sh`\\n5. Now we could run `./start.sh` in terminal.  \\n   Make sure you are under `./apache-tomcat-{version}/bin/`.\\n6. The terminal will show something like below:\\n   ![tomcat started terminal screenshot](./tomcat-started.png)\\n\\n   Check at [localhost:8080](localhost:8080), you will see something like below:\\n   ![tomcat localhost:8080 screenshot](tomcat-localhost.png)\\n\\n### How to End a Tomcat Server\\nTo end a tomcat server in terminal, run\\n```\\npkill -9 -f tomcat\\n```\\n(from [stackoverflow](https://stackoverflow.com/questions/15236308/how-do-i-kill-this-tomcat-process-in-terminal))\\n\\n\\n\\n### How to Configure a Tomcat Server\\nWe could configure a Tomcat server in its `/conf/server.xml` file.\\n\\nSay we want to change the PORT. We could configure Tomcat\'s PORT in `/conf/server.xml`. Changing the `port` value is all we need to do.\\n![configure tomcat\'s port](./tomcat-config-port.png)\\n\\nSpecifically, if we configure the PORT as `80`, then we could visit the local Tomcat server without specifying the port on browser url with just `localhost`. This is because `80` is also the PORT for HTTP.\\n\\n\\n### How to Deploy an Application in Tomcat?\\nAll we need to do is put files under `webapps` directory. There are some ways to do so:\\n1. Simply copy original files and paste them under `webapps` directory\\n2. Convert original files into `.war` files, copy those `.war` files and paste them under `webapps` directory. As the [docs](https://tomcat.apache.org/tomcat-3.3-doc/tomcat-ug.html#directory_structure) specified, \\"Any .war files placed here will be automatically expanded\\".\\n\\n\\n## How to Integrate Tomcat in Intellij IDEA?\\n### Add Local Tomcat Server\\nCheck the Intellij IDEA\'s guide on Tomcat Server.\\n> [Run/Debug Configuration: Tomcat Server](https://www.jetbrains.com/help/idea/run-debug-configuration-tomcat-server.html)\\n\\n### Add Tomcat Plugin in `pom.xml`\\nWe could also add Tomcat through `pom.xml`.\\n\\n1. Add Tomcat plugin in `pom.xml`:\\n   ![maven tomcat plugin in pom.xml](./maven-tomcat-plugin.png)\\n\\n2. Use Maven Helper (download from [marketplace](https://plugins.jetbrains.com/plugin/7179-maven-helper)) to start the project:\\n   ![maven hepler run tomcat](./maven-hepler-run-tomcat.png)"},{"id":"intellij-idea-useful-shortcuts","metadata":{"permalink":"/blog/intellij-idea-useful-shortcuts","editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2022-06-23-intellij-idea-useful-shortcuts.md","source":"@site/blog/2022-06-23-intellij-idea-useful-shortcuts.md","title":"Useful Shortcuts on Intellij Idea","description":"Print","date":"2022-06-23T00:00:00.000Z","formattedDate":"June 23, 2022","tags":[{"label":"Intellij Idea","permalink":"/blog/tags/intellij-idea"},{"label":"Java","permalink":"/blog/tags/java"}],"readingTime":0.205,"truncated":false,"authors":[{"name":"Ziwei Wang","title":"this website owner","url":"https://github.com/zwwang98","image_url":"https://github.com/zwwang98.png","imageURL":"https://github.com/zwwang98.png"}],"frontMatter":{"slug":"intellij-idea-useful-shortcuts","title":"Useful Shortcuts on Intellij Idea","authors":{"name":"Ziwei Wang","title":"this website owner","url":"https://github.com/zwwang98","image_url":"https://github.com/zwwang98.png","imageURL":"https://github.com/zwwang98.png"},"tags":["Intellij Idea","Java"]},"prevItem":{"title":"Apache Tomcat","permalink":"/blog/tomcat"},"nextItem":{"title":"Interesting Websites","permalink":"/blog/interesting-websites"}},"content":"### Print\\n1. `sout`: Prints  \\n   `System.out.println();`\\n2. `soutm`: Prints current class and method names to System.out  \\n   `System.out.println(\\"$CLASS_NAME$.$METHOD_NAME$\\");`\\n3. `soutp`: Prints method parameter names and values to System.out  \\n   `System.out.println($FORMAT$);`\\n4. `soutv`: Prints a value to System.out  \\n   `System.out.println(\\"$EXPR_COPY$ = \\" + $EXPR$);`\\n\\n[Source](https://stackoverflow.com/questions/38992114/system-out-println-shortcut-on-intellij-idea)"},{"id":"interesting-websites","metadata":{"permalink":"/blog/interesting-websites","editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2022-06-23-interestingWebsites/index.md","source":"@site/blog/2022-06-23-interestingWebsites/index.md","title":"Interesting Websites","description":"killedbygoogle","date":"2022-06-23T00:00:00.000Z","formattedDate":"June 23, 2022","tags":[{"label":"Intellij Idea","permalink":"/blog/tags/intellij-idea"},{"label":"Java","permalink":"/blog/tags/java"}],"readingTime":0.04,"truncated":false,"authors":[{"name":"Ziwei Wang","title":"this website owner","url":"https://github.com/zwwang98","image_url":"https://github.com/zwwang98.png","imageURL":"https://github.com/zwwang98.png"}],"frontMatter":{"slug":"interesting-websites","title":"Interesting Websites","authors":{"name":"Ziwei Wang","title":"this website owner","url":"https://github.com/zwwang98","image_url":"https://github.com/zwwang98.png","imageURL":"https://github.com/zwwang98.png"},"tags":["Intellij Idea","Java"]},"prevItem":{"title":"Useful Shortcuts on Intellij Idea","permalink":"/blog/intellij-idea-useful-shortcuts"},"nextItem":{"title":"Useful Resources for Writting Blogs","permalink":"/blog/useful-resources-for-writting-blogs"}},"content":"[killedbygoogle](https://killedbygoogle.com/)\\n![killedbygoogle website screenshot at 2022 June 23rd](./killedbygoogle.png)"},{"id":"useful-resources-for-writting-blogs","metadata":{"permalink":"/blog/useful-resources-for-writting-blogs","editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2022-06-22-useful-links-for-writting-blogs.md","source":"@site/blog/2022-06-22-useful-links-for-writting-blogs.md","title":"Useful Resources for Writting Blogs","description":"markdown syntax","date":"2022-06-22T00:00:00.000Z","formattedDate":"June 22, 2022","tags":[{"label":"resources","permalink":"/blog/tags/resources"}],"readingTime":0.05,"truncated":false,"authors":[{"name":"Ziwei Wang","title":"this website owner","url":"https://github.com/zwwang98","image_url":"https://github.com/zwwang98.png","imageURL":"https://github.com/zwwang98.png"}],"frontMatter":{"slug":"useful-resources-for-writting-blogs","title":"Useful Resources for Writting Blogs","authors":{"name":"Ziwei Wang","title":"this website owner","url":"https://github.com/zwwang98","image_url":"https://github.com/zwwang98.png","imageURL":"https://github.com/zwwang98.png"},"tags":["resources"]},"prevItem":{"title":"Interesting Websites","permalink":"/blog/interesting-websites"},"nextItem":{"title":"How to deploy your website on github pages without repo name?","permalink":"/blog/deploy-on-github-pages-without-repo-name"}},"content":"### markdown syntax\\n1. https://www.markdownguide.org/basic-syntax/\\n2. [Generate table in markdown](https://www.tablesgenerator.com/markdown_tables)"},{"id":"deploy-on-github-pages-without-repo-name","metadata":{"permalink":"/blog/deploy-on-github-pages-without-repo-name","editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2022-06-22-DeployOnGithubPages/index.md","source":"@site/blog/2022-06-22-DeployOnGithubPages/index.md","title":"How to deploy your website on github pages without repo name?","description":"Situation","date":"2022-06-22T00:00:00.000Z","formattedDate":"June 22, 2022","tags":[{"label":"deploy on github","permalink":"/blog/tags/deploy-on-github"}],"readingTime":0.86,"truncated":false,"authors":[{"name":"Ziwei Wang","title":"this website owner","url":"https://github.com/zwwang98","image_url":"https://github.com/zwwang98.png","imageURL":"https://github.com/zwwang98.png"}],"frontMatter":{"slug":"deploy-on-github-pages-without-repo-name","title":"How to deploy your website on github pages without repo name?","authors":{"name":"Ziwei Wang","title":"this website owner","url":"https://github.com/zwwang98","image_url":"https://github.com/zwwang98.png","imageURL":"https://github.com/zwwang98.png"},"tags":["deploy on github"]},"prevItem":{"title":"Useful Resources for Writting Blogs","permalink":"/blog/useful-resources-for-writting-blogs"},"nextItem":{"title":"How to Embed Live Code Editor in your Website?","permalink":"/blog/sandpack"}},"content":"### Situation\\nWhen I was deploying my website on github pages, I found that the deployment url always containing my repo name. The whole url was \'https://zwwang98.github.io/blog\' and I want it to be just \'https://zwwang98.github.io/\'. Here\'s what I have done to solve this problem.\\n\\n### Action\\n1. Changed my website\'s repo name into `<username>.github.io`.  \\n   Say if your github user name is \\"user\\", then your repo for generating a github page without trailing repo name must be \\"user.github.io\\".\\n2. Deploy it. In your repo:  \\n   `settings` -> `pages` -> choose the `source` and click `save`\\n\\n   ![how to deploy on github](./how-to-deploy-on-github.png)\\n\\n### Summary\\nBased on [github docs](https://docs.github.com/en/pages/getting-started-with-github-pages/about-github-pages#types-of-github-pages-sites),  \\n> There are three types of GitHub Pages sites: project, user, and organization.\\n\\nBased on my understanding, the repo name constraints and the result github pages url are listed below:  \\n\\n|              | Repo Name                  | Result Site                                                                                          |\\n|--------------|----------------------------|------------------------------------------------------------------------------------------------------|\\n| project      | any name you want          | `http(s)://<username>.github.io/<repository>`  or  `http(s)://<organization>.github.io/<repository>` |\\n| user         | `<username>.github.io`     | `http(s)://<username>.github.io`                                                                     |\\n| organization | `<organization>.github.io` | `http(s)://<organization>.github.io`                                                                 |\\n\\n\\n\\n### Reference\\nhttps://docs.github.com/en/pages/getting-started-with-github-pages/about-github-pages#types-of-github-pages-sites"},{"id":"sandpack","metadata":{"permalink":"/blog/sandpack","editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2022-06-22-sandpack/index.mdx","source":"@site/blog/2022-06-22-sandpack/index.mdx","title":"How to Embed Live Code Editor in your Website?","description":"When I was reading React Docs Beta, I found an editable code block and its live rendering result on that page.","date":"2022-06-22T00:00:00.000Z","formattedDate":"June 22, 2022","tags":[{"label":"blog","permalink":"/blog/tags/blog"}],"readingTime":0.75,"truncated":false,"authors":[{"name":"Ziwei Wang","title":"this website owner","url":"https://github.com/zwwang98","image_url":"https://github.com/zwwang98.png","imageURL":"https://github.com/zwwang98.png"}],"frontMatter":{"slug":"sandpack","title":"How to Embed Live Code Editor in your Website?","authors":{"name":"Ziwei Wang","title":"this website owner","url":"https://github.com/zwwang98","image_url":"https://github.com/zwwang98.png","imageURL":"https://github.com/zwwang98.png"},"tags":["blog"]},"prevItem":{"title":"How to deploy your website on github pages without repo name?","permalink":"/blog/deploy-on-github-pages-without-repo-name"},"nextItem":{"title":"My Experience on Using Material UI","permalink":"/blog/experience-on-material-ui"}},"content":"import { Sandpack } from \\"@codesandbox/sandpack-react\\";\\n\\nWhen I was reading [React Docs Beta](https://beta.reactjs.org/learn#sharing-data-between-components), I found an editable code block and its live rendering result on that page.\\nI was wondering how to do so and maybe I could use this tool for my own website. Then I opened the chrome console and seleted the element I was interested in and found the corresponding html code like below:\\n![react-docs-editable-code-block-screenshot](./react-docs-editable-code-block-screenshot.png)\\n\\nThe div has a class attribute \\"sandpack-container\\" that sounds like sandbox. So I googled it and this is what I found:\\n![sandpack-website-screenshot](./sandpack-website-screenshot.png)\\n\\nAnd this is what we will discuss.\\n\\n## Sandpack\\n### What is Sandpack\\nOn their [website](https://sandpack.codesandbox.io/), it says that:\\n\\n> A component toolkit for creating live-running code editing experiences, using the power of CodeSandbox.\\n\\n### Running Example\\nFollowing [Sandpack\'s Docs](https://sandpack.codesandbox.io/docs/), I added this running Sandpack react component for writting React below. Feel free to give it a try!\\n\\n<Sandpack template=\\"react\\"></Sandpack>"},{"id":"experience-on-material-ui","metadata":{"permalink":"/blog/experience-on-material-ui","editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2022-06-06-mui/index.md","source":"@site/blog/2022-06-06-mui/index.md","title":"My Experience on Using Material UI","description":"What is Material UI","date":"2022-06-06T00:00:00.000Z","formattedDate":"June 6, 2022","tags":[{"label":"material ui","permalink":"/blog/tags/material-ui"},{"label":"front end","permalink":"/blog/tags/front-end"},{"label":"react","permalink":"/blog/tags/react"}],"readingTime":0.055,"truncated":false,"authors":[{"name":"Ziwei Wang","title":"this website owner","url":"https://github.com/zwwang98","image_url":"https://github.com/zwwang98.png","imageURL":"https://github.com/zwwang98.png"}],"frontMatter":{"slug":"experience-on-material-ui","title":"My Experience on Using Material UI","authors":{"name":"Ziwei Wang","title":"this website owner","url":"https://github.com/zwwang98","image_url":"https://github.com/zwwang98.png","imageURL":"https://github.com/zwwang98.png"},"tags":["material ui","front end","react"]},"prevItem":{"title":"How to Embed Live Code Editor in your Website?","permalink":"/blog/sandpack"}},"content":"### What is Material UI\\n\\n\\n### MUI Components I have used"}]}')}}]);